#set(CMAKE_CXX_COMPILER             "/usr/bin/clang++")
#set(CMAKE_CXX_FLAGS "-std=c++11 -Wall -Wextra -Wno-missing-braces -pthread -g  -lboost_thread-mt")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-missing-braces -Wextra")

find_package(Threads REQUIRED)

if(Boost_FOUND)
   #include_directories(${Boost_INCLUDE_DIRS})
   #include_directories(${CMAKE_SOURCE_DIR}/source)
   aux_source_directory(. SRC_LIST)
   aux_source_directory(./data/attribute SRC_LIST)
   aux_source_directory(./data/dictionary SRC_LIST)
   aux_source_directory(./data/dataset SRC_LIST)
   aux_source_directory(./filesystem SRC_LIST)
   aux_source_directory(./network/upperlayer SRC_LIST)
   aux_source_directory(./network/dimse SRC_LIST)
   aux_source_directory(./network SRC_LIST)
   aux_source_directory(./serviceclass SRC_LIST)
   aux_source_directory(./infrastructure SRC_LIST)
   aux_source_directory(./util SRC_LIST)
   add_library(libdicompp ${SRC_LIST})
   target_include_directories(libdicompp
       PUBLIC $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include> $<INSTALL_INTERFACE:include>)
   target_include_directories(libdicompp PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} PUBLIC ${Boost_INCLUDE_DIRS})
   target_compile_definitions(libdicompp PUBLIC BOOST_ASIO_HAS_STD_CHRONO)
   target_compile_features(libdicompp PUBLIC cxx_std_11)
   target_link_libraries(libdicompp ${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
endif()

